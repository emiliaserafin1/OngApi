// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ongApi.Data;

#nullable disable

namespace ongApi.Migrations
{
    [DbContext(typeof(OngContext))]
    [Migration("20240226024839_Creation")]
    partial class Creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("ActivityUser", b =>
                {
                    b.Property<int>("ActivitiesAsParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActivitiesAsParticipantId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserActivity", (string)null);
                });

            modelBuilder.Entity("ongApi.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("JefeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VolunteerCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JefeId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ongApi.Entities.ActivityMaterial", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActivityId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ActivityMaterials");
                });

            modelBuilder.Entity("ongApi.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ongApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ActivityUser", b =>
                {
                    b.HasOne("ongApi.Entities.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesAsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ongApi.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ongApi.Entities.Activity", b =>
                {
                    b.HasOne("ongApi.Entities.User", "Jefe")
                        .WithMany("ActivitiesAsJefe")
                        .HasForeignKey("JefeId");

                    b.Navigation("Jefe");
                });

            modelBuilder.Entity("ongApi.Entities.ActivityMaterial", b =>
                {
                    b.HasOne("ongApi.Entities.Activity", "Activity")
                        .WithMany("ActivityMaterials")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ongApi.Entities.Material", "Material")
                        .WithMany("ActivityMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("ongApi.Entities.Activity", b =>
                {
                    b.Navigation("ActivityMaterials");
                });

            modelBuilder.Entity("ongApi.Entities.Material", b =>
                {
                    b.Navigation("ActivityMaterials");
                });

            modelBuilder.Entity("ongApi.Entities.User", b =>
                {
                    b.Navigation("ActivitiesAsJefe");
                });
#pragma warning restore 612, 618
        }
    }
}
